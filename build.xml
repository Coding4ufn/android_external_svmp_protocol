<project name="protocol" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property environment="env" />
  <property name="protoc25"  location="${env.HOME}/local/bin/protoc"/>
  <property name="protoc25_libdir"  location="${env.HOME}local/lib"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <copy file="../svmp-protocol-def/svmp.proto" tofile="./svmp.proto"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <exec executable="${protoc25}">
	    <env key="LD_LIBRARY_PATH" value="${protoc25_libdir}"/>
	    <arg value="--java_out=src" />
	    <arg value="svmp.proto" />
    </exec>
    <javac srcdir="${src}" classpath="protobuf-2.5.0/protobuf-java-2.5.0.jar" destdir="${build}"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar destfile="${dist}/svmp-protocol.jar">
        <fileset dir="${build}" />
        <restrict>
            <name name="**/*.class" />
            <archives>
                <zips>
                    <fileset dir="protobuf-2.5.0" includes="**/*.jar" />
                </zips>
            </archives>
        </restrict>
    </jar>
  </target>


  <target name="all" depends="dist"
        description="generate the distribution" >
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
